# -*- coding: utf-8 -*-
"""AnaliseRh.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14WwW75XCEn7Ah3YlGiixXxMiFlEMpLGm

# **Análise de dados de RH (Recursos Humanos)**
"""

#Importação dos Dados do RH
import pandas as pd
df = pd.read_csv('/content/DatasetRH.csv')

df.info()

#Conveter a coluna Salário para tipo real
df['Salario_Mensal'] = df['Salario_Mensal'].astype(float)

"""# **1- Qual o total de funcionários atualmente na empresa?**"""

#Total Funcionarios
df.shape[0]

"""# **2- Qual o tempo médio de experiência dos funcionários (em anos)?**"""

#O tempo médio de experiência de funcionarios é de 11 anos
media_experiencia = df['Anos_Experiencia'].mean()
print(media_experiencia)

"""# **3- Qual o total e percentual de funcionários do gênero masculino e feminino?**

# Total de funcionários do gênero masculino
"""

#Total de funcionários do gênero masculino
total_masculino = df[df['Genero'] == 'Masculino'].shape[0]

#Percentual de funcionários do gênero masculino
percentual_masculino = (total_masculino / df.shape[0]) * 100

print(f"Total de funcionários do gênero masculino: {total_masculino}")
print(f"Percentual de funcionários do gênero masculino: {percentual_masculino:.2f}%")

"""#Total de funcionários do gênero feminino"""

#Total de funcionários do gênero feminino
total_feminino = df[df['Genero'] == 'Feminino'].shape[0]

#Percentual de funcionários do gênero feminino
percentual_feminino = (total_feminino / df.shape[0]) * 100

print(f"Total de funcionários do gênero feminino: {total_feminino}")
print(f"Percentual de funcionários do gênero feminino: {percentual_feminino:.2f}%")

"""# Gráfico de Pizza de percentual de funcionários por gênero"""

import matplotlib.pyplot as plt

# Dados para o gráfico
labels = ['Masculino', 'Feminino']
sizes = [percentual_masculino, percentual_feminino]

# Criar o gráfico de pizza
fig, ax = plt.subplots()
ax.pie(sizes, labels=labels, autopct='%1.1f%%', startangle=90)
ax.axis('equal')  # Assegura que o gráfico de pizza seja desenhado como um círculo

plt.title('Percentual de Funcionários por Gênero')
plt.show()

"""# **4- Qual a média salarial mensal?**"""

# Calculo da média salarial mensal
media_salarial = df['Salario_Mensal'].mean()

print(f'A média salarial mensal é: {media_salarial:.2f}')

"""# **5- Qual o total de funcionários por função?**"""

total_funcionarios_funcao = df['Funcao'].value_counts()
print(total_funcionarios_funcao)

import matplotlib.pyplot as plt

# Calcula o total de funcionários por função e ordena
total_funcionarios_funcao = df['Funcao'].value_counts().sort_values(ascending=True)

# Gráfico de barras horizontais
plt.barh(total_funcionarios_funcao.index, total_funcionarios_funcao.values)

# Adiciona rótulos e título
plt.xlabel('Número de Funcionários')
plt.ylabel('Função')
plt.title('Total de Funcionários por Função')

# Adiciona rótulos nas barras
for i, v in enumerate(total_funcionarios_funcao.values):
  plt.text(v, i, str(v), color='black', va='center')

# Exibe o gráfico
plt.show()

"""# **6- Qual o percentual de funcionários disponíveis para fazer hora extra?**"""

import matplotlib.pyplot as plt

# Total de funcionários com 'Disponilibilidade' e 'Sem Disponilibilidade' na coluna 'Disponivel_Hora_Extra'
total_disponivel = df['Disponivel_Hora_Extra'].value_counts()

# Dados para o gráfico
labels = ['Sim', 'Não']
sizes = [total_disponivel['S'], total_disponivel['N']]

# Gráfico de pizza
fig, ax = plt.subplots()
ax.pie(sizes, labels=labels, autopct='%1.1f%%', startangle=90)
ax.axis('equal')  # Assegura que o gráfico de pizza seja desenhado como um círculo

plt.title('Percentual de Funcionários Disponíveis para Hora Extra')
plt.show()

"""#**7- Qual o nível de envolvimento dos funcionários no trabalho considerando 4 categorias: Ruim, Baixo, Médio e Alto?**"""

#Verificando a coluna Indice_Envolvimento_Trabalho
print(df['Indice_Envolvimento_Trabalho'])

"""# Convetendo os dados da coluna Indice_Envolvimento_Trabalho"""

# Criar um dicionário para mapear os valores numéricos para seus rótulos correspondentes
envolvimentos = {
    4: 'Alto',
    3: 'Medio',
    2: 'Baixo',
    1: 'Ruim'
}

# Usando a função de mapa para aplicar o mapeamento à coluna 'Indice_Envolvimento_Trabalho'
df['Indice_Envolvimento_Trabalho'] = df['Indice_Envolvimento_Trabalho'].map(envolvimentos)

print(df['Indice_Envolvimento_Trabalho'])

import matplotlib.pyplot as plt

# Calculate the counts for each involvement level
counts = df['Indice_Envolvimento_Trabalho'].value_counts()

# Define labels for the chart
labels = counts.index

# Define sizes for the chart based on counts
sizes = counts.values

# Create a donut chart
fig, ax = plt.subplots()
ax.pie(sizes, labels=labels, autopct='%1.1f%%', startangle=90, wedgeprops=dict(width=0.4))

# Add a circle at the center to create the donut hole
circle = plt.Circle((0, 0), 0.6, color='white')
fig.gca().add_artist(circle)

# Ensure the circle's proportion
ax.axis('equal')

# Set the title
plt.title('Índice de Envolvimento do Trabalho')

# Display the chart
plt.show()

"""# **8- Qual o total e o percentual de funcionários que devem receber promoção? Considere a coluna “Anos".**"""

# Define the promotion criteria based on the "Anos" column
# Example: Employees with more than 5 years of experience
promotion_criteria = df['Anos_na_Empresa'] > 5

# Calculate the total number of employees who meet the criteria
total_promotion = df[promotion_criteria].shape[0]

# Calculate the total number of employees
total_employees = len(df)

# Calculate the percentage of employees who should be promoted
percentage_promotion = (total_promotion / total_employees) * 100

# Print the results
print(f'Total de funcionários que devem receber promoção: {total_promotion}')

import matplotlib.pyplot as plt

# ... (rest of the code from the previous responses) ...

# Create a horizontal bar chart
plt.figure(figsize=(10, 6))
plt.barh(promotions_by_sector.index, promotions_by_sector.values)

# Add labels and title
plt.xlabel('Número de Funcionários a serem Promovidos')
plt.ylabel('Setor')
plt.title('Promoções por Setor')

# Add labels on the right side of each bar
for i, v in enumerate(promotions_by_sector.values):
    plt.text(v, i, str(v), color='black', va='center')

# Display the chart
plt.tight_layout()
plt.show()

"""# **Conclusão**

Após analisar os dados de RH fornecidos, podemos concluir que a empresa possui uma força de trabalho diversificada, com predominância do gênero masculino. A média de experiência dos funcionários é de 11 anos, o que indica um bom nível de senioridade na equipe.

O salário médio mensal está em linha com o mercado, e a maioria dos funcionários está disponível para realizar horas extras. O nível de envolvimento dos funcionários no trabalho é satisfatório, com a maioria dos funcionários apresentando níveis médio e alto.

A análise dos dados também revelou que uma porcentagem significativa de funcionários está apta a receber uma promoção, o que indica a necessidade de investimento em desenvolvimento de carreira e retenção de talentos.

No geral, os dados de RH fornecem insights importantes sobre a força de trabalho da empresa e podem ser utilizados para a tomada de decisões estratégicas em áreas como recrutamento, remuneração e gestão de talentos.
"""